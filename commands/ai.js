const axios = require('axios');
const { sendMessage } = require('../handles/sendMessage');

const formatResponse = (text) => {
  const charMap = {
    'A': 'ùòà', 'B': 'ùòâ', 'C': 'ùòä', 'D': 'ùòã', 'E': 'ùòå',
    'F': 'ùòç', 'G': 'ùòé', 'H': 'ùòè', 'I': 'ùòê', 'J': 'ùòë',
    'K': 'ùòí', 'L': 'ùòì', 'M': 'ùòî', 'N': 'ùòï', 'O': 'ùòñ',
    'P': 'ùòó', 'Q': 'ùòò', 'R': 'ùòô', 'S': 'ùòö', 'T': 'ùòõ',
    'U': 'ùòú', 'V': 'ùòù', 'W': 'ùòû', 'X': 'ùòü', 'Y': 'ùò†',
    'Z': 'ùò°',
    'a': 'ùò¢', 'b': 'ùò£', 'c': 'ùò§', 'd': 'ùò•', 'e': 'ùò¶',
    'f': 'ùòß', 'g': 'ùò®', 'h': 'ùò©', 'i': 'ùò™', 'j': 'ùò´',
    'k': 'ùò¨', 'l': 'ùò≠', 'm': 'ùòÆ', 'n': 'ùòØ', 'o': 'ùò∞',
    'p': 'ùò±', 'q': 'ùò≤', 'r': 'ùò≥', 's': 'ùò¥', 't': 'ùòµ',
    'u': 'ùò∂', 'v': 'ùò∑', 'w': 'ùò∏', 'x': 'ùòπ', 'y': 'ùò∫',
    'z': 'ùòª'
  };
  return text.split('').map(char => charMap[char] || char).join('');
};

module.exports = {
  name: 'ai',
  description: 'Assistant intelligent',
  usage: 'Posez votre question',
  author: 'Messie Osango',
  async execute(senderId, args, pageAccessToken, event) {
    try {
      const query = args.join(' ').trim() || 'Bonjour';
      const API_URL = 'https://messie-api-ia.vercel.app/chat';
      const API_KEY = process.env.API_KEY || 'messie12356osango2025jinWoo';

      if (!pageAccessToken) {
        throw new Error('Token de page manquant');
      }

      const response = await axios.post(API_URL, {
        prompt: query
      }, {
        headers: {
          'Authorization': `Bearer ${API_KEY}`,
          'Content-Type': 'application/json'
        },
        timeout: 30000
      });

      const answer = response.data?.response || 'Pas de r√©ponse';
      await sendMessage(senderId, { text: formatResponse(answer) }, pageAccessToken);

    } catch (error) {
      let errorMessage = 'Erreur syst√®me';
      if (error.response?.status === 401) {
        errorMessage = 'Erreur d\'authentification API';
      }
      await sendMessage(senderId, { text: formatResponse(errorMessage) }, pageAccessToken);
    }
  }
};
